---
import type { CollectionEntry } from "astro:content";
import { getCollection, render } from "astro:content";
import BaseLayout from "../layouts/BaseLayout.astro";
import Separator from "../components/Separator.astro";

export const getStaticPaths = async () => {
  // Fetch all projects
  const projects = await getCollection("projects");

  // Map over the projects to generate paths for each project's page
  const paths = projects.map((project) => {
    return {
      params: { project_id: project.id },
      props: { projects, project },
    };
  });

  // Return the generated paths to Astro for static page generation
  return paths;
};

type Props = {
  projects: CollectionEntry<"projects">[];
  project: CollectionEntry<"projects">;
};

const { projects, project } = Astro.props;

const project_id = project.id;

// Find the index of the current project in the array
const currentProjectIndex = projects.findIndex((a) => a.id === project_id);

// Calculate the index of the "next" project in the array (wrap around if at the last project)
const nextProjectIndex = (currentProjectIndex + 1) % projects.length;

// Get the "next" project based on the calculated index
const nextProject = projects[nextProjectIndex];

// Render the content of the current project
const { Content } = await render(project);
---

<BaseLayout title={project.data.name}>
  <section>
    <header class="title-header">
      <h2>
        {project.data.name}
      </h2>
      <div>
        <a class="back" href="/"><span class="lang-de">Alle</span><span class="lang-en">all</span></a>
        <span class="faded">/</span>
        <a href={`/${nextProject.id}`}> <span class="lang-de">NÃ¤chstes Projekt</span><span class="lang-en">next project</span></a>
      </div>
    </header>
    <Separator />
    <div class="content-wrap">
      <div class="images">
        {project.data.images.map((img) => (
          <img class="fade-in" src={img.src} alt={img.alt} />
        ))}
      </div>
      <div class="content">
        <dl>
          <dd class="lang-de">{project.data.type}</dd>
          <dd class="lang-en">{project.data.type_en ?? project.data.type}</dd>
          <dd>{project.data.year}</dd>
          <dd>{project.data.location}</dd>
       </dl>
        <div class="lang-de"><Content /></div>
        {project.data.body_en && (
          <div class="lang-en">{project.data.body_en}</div>
        )}
        
      </div>
    </div>
  </section>
</BaseLayout>
<style>
  .content-wrap {
    grid-template-areas: "img" "content";
    grid-template-columns: 100%;
 
    @media screen and (min-width: 50em) {
      grid-template-columns: 1.3fr 0.7fr;
      grid-template-areas: "img content";
    }
  }
  .images {
    grid-area: img;
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }
  .content p:last-child {
    margin-top: 2.5rem;
    display: flex;
  }
</style>
